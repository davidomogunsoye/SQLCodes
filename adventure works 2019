/* (8) find the average and the sum of the subtotal for every customer. 
Return customerid, average and sum of the subtotal. 
Grouped the result on customerid and salespersonid. 
Sort the result on customerid column in descending order. */

select s.CustomerID, s.SalesPersonID, avg(s.SubTotal) avg, sum(s.subTotal) sum
from [AdventureWorks2019].Sales.SalesOrderHeader s
group by s.CustomerID, S.SalesPersonID
order by s.CustomerID desc;

/* (7) calculate the total freight paid by each customer. 
Return customerid and total freight. Sort the output in ascending order on customerid. */

select s.CustomerID, SUM(s.Freight) total_freight
from [AdventureWorks2019].Sales.SalesOrderHeader s
group by s.CustomerID
order by s.CustomerID;

/* (6) create a list of unique jobtitles in the employee table in Adventureworks database. 
Return jobtitle column and arranged the resultset in ascending order. */

select distinct e.JobTitle
from [AdventureWorks2019].HumanResources.Employee e
order by e.JobTitle; 

  /* (5) return all rows from the salesorderheader table in Adventureworks database 
and calculate the percentage of tax on the subtotal have decided. 
Return salesorderid, customerid, orderdate, subtotal, percentage of tax column. 
Arranged the result set in descending order on subtotal. */

select s.SalesOrderID, s.CustomerID, s.OrderDate, s.SubTotal, ((s.TaxAmt / s.SubTotal) * 100) percent_tax
from [AdventureWorks2019].Sales.SalesOrderHeader s
order by s.SubTotal desc;

-- (1) Retrieve all rows and columns from the employee table in the Adventureworks database. Sort the result set in ascending order on jobtitle.

SELECT *
  FROM [AdventureWorks2019].[HumanResources].[Employee] a
  order by a.[JobTitle] desc;

/* return all rows and a subset of the columns (FirstName, LastName, businessentityid) 
from the person table in the AdventureWorks database. rename the third column to Employee_id. 
Arranged the output in ascending order by lastname. */

select p.[FirstName], p.[LastName], p.[BusinessEntityID] employee_id
from [AdventureWorks2019].[person].[person] p
order by p.LastName asc;

/* return only the rows for product that have a sellstartdate that is not NULL and a productline of 'T'. 
Return productid, productnumber, and name. Arranged the output in ascending order on name */

SELECT a.ProductID, a.ProductNumber, a.Name
  FROM [AdventureWorks2019].[Production].[Product] a
  where a.SellStartDate is not null 
  and 
  a.ProductLine = 'T'
  order by name;


/* return the total ListPrice and StandardCost of products for each color. 
Products that name starts with 'Mountain' and ListPrice is more than zero. Return Color, total list price, total standardcode. 
Sort the result set on color in ascending order. */

SELECT distinct a.Color, sum(a.ListPrice) total_list_price, sum(a.standardCost) total_standard_cost
  FROM [AdventureWorks2019].[Production].[Product] a
  where a.name like 'Mountain%' 
  and 
  a.ListPrice > 0
  Group by a.color
  order by a.Color;
  
  

